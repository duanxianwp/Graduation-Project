package com.sys.dao;

import com.sys.entity.Account;
import com.sys.entity.User;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

import java.util.List;
import java.util.Map;

public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Fri Mar 02 14:37:57 CST 2018
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Fri Mar 02 14:37:57 CST 2018
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Fri Mar 02 14:37:57 CST 2018
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Fri Mar 02 14:37:57 CST 2018
     */
    User selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Fri Mar 02 14:37:57 CST 2018
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Fri Mar 02 14:37:57 CST 2018
     */
    int updateByPrimaryKey(User record);

    @Select("select * from users where account = #{account}")
    User findByAccount(String account);

    @Select("select distinct profession from users where college = #{college} ")
    List<String> getProfession(String college);

    @Select("select distinct profession,classroom from users where college=#{college} and profession=#{profession} and level = 1 ")
    List<Map<String, String>> getClassroomByCollegeAndProfession(@Param("college") String college, @Param("profession") String profession);

    @Select("select distinct profession,classroom from users where college=#{college} and level = 1")
    List<Map<String, String>> getClassroomByCollege(@Param("college") String college);

    @Select("select distinct profession,classroom from users where level = 1")
    List<Map<String, String>> getClassroom();

    List<User> getUsersByUninCondition(@Param("profession") String profession, @Param("classroom") String classroom, @Param("start") Integer start);

    @Select("select SQL_CALC_FOUND_ROWS * from users where account like CONCAT('%',#{account},'%') limit #{start},10")
    List<User> FuzzySearchUserByAccount(@Param("account") String account, @Param("start") Integer start);

    @Select("select SQL_CALC_FOUND_ROWS * from users where name like CONCAT('%',#{name},'%') limit #{start},10")
    List<User> FuzzySearchUserByName(@Param("name") String name, @Param("start") Integer start);

    @Select("select SQL_CALC_FOUND_ROWS * from users where account like CONCAT('%',#{account},'%') and name like CONCAT('%',#{name},'%') limit #{start},10")
    List<User> FuzzySearchUserByAccountAndName(@Param("account") String account, @Param("name") String name, @Param("start") Integer start);

    @Select("select FOUND_ROWS()")
    int getRows();

    List<User> getScoreList(@Param("college") String college,@Param("profession")String profession,@Param("classroom")String classroom,@Param("start") Integer start);

    List<User> getScoreListByParamList(@Param("profession")String profession,@Param("classes") List classes,@Param("start") Integer start);

    List<User> getStuByAccount(@Param("account") String account,@Param("profession") String profession,@Param("classes") List<String> classes, @Param("start") Integer start);

    List<User> getStuByAccount1(@Param("account") String account,@Param("profession") String profession, @Param("start") Integer start);

    List<User> getStuByAccount2(@Param("account") String account,@Param("college") String college, @Param("start") Integer start);
}